{"version":3,"sources":["mainMenu/sessionDash.module.css","variableManagement/variableManagement.module.css","mainMenu/lakeAccordion.module.css","nav/nav.module.css","stats/stats.module.css","app.module.css","mainMenu/lakeStats.module.css","mainMenu/mainMenu.module.css","nav/Nav.js","mainMenu/LakeAccordion.js","mainMenu/LakeStats.js","mainMenu/SessionDash.js","mainMenu/MainMenu.js","variableManagement/VariableManager.js","variableManagement/VaraibleManagement.js","stats/Stats.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","className","styles","navContainer","logo","to","LakeAccordion","container","Accordion","accordian","lakes","map","lake","index","onClick","selectLake","lakeItem","name","LakeStats","lakeIndex","Button","variant","fishLake","SessionDash","currentSession","lakeName","buttonContainer","button","resetIsFishing","MainMenu","useState","lakeSelected","setLakeSelected","isFishing","setIsFishing","dashIsFullscreen","setDashIsFullscreen","menuContainer","fullScreenSessionDash","sessionDashboard","fullScreenFishingDash","fishingDashboard","lakeAccordion","lakeStats","dashboardExtender","optionButtons","buttonInfoContainer","buttonInfoHeader","buttonInfo","VariableManager","VariableManagement","managementInfo","infoHeader","infoBody","ButtonGroup","variableSelectors","Stats","header","App","state","casts","app","path","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.42ba6bb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sessionDash_container__2oq5U\",\"buttonContainer\":\"sessionDash_buttonContainer__1pNzQ\",\"button\":\"sessionDash_button__li4O_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoHeader\":\"variableManagement_infoHeader__1w-wh\",\"infoBody\":\"variableManagement_infoBody__1yTVH\",\"variableSelectors\":\"variableManagement_variableSelectors__2-L3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeAccordion_container__2swJ5\",\"lakeItem\":\"lakeAccordion_lakeItem__3MmoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"nav_navContainer__2VmMG\",\"logo\":\"nav_logo__YKx8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"stats_header__5ozD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3IZMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeStats_container__3WcWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"mainMenu_menuContainer__yFvJS\",\"fishingDashboard\":\"mainMenu_fishingDashboard__2BceL\",\"fullScreenFishingDash\":\"mainMenu_fullScreenFishingDash__1u1nb\",\"sessionDashboard\":\"mainMenu_sessionDashboard__1l3eJ\",\"fullScreenSessionDash\":\"mainMenu_fullScreenSessionDash__5oW4B\",\"dashboardExtender\":\"mainMenu_dashboardExtender__3InqX\",\"optionButtons\":\"mainMenu_optionButtons__1_ptS\",\"buttonContainer\":\"mainMenu_buttonContainer__1Nt4W\",\"buttonInfoHeader\":\"mainMenu_buttonInfoHeader__1fsiR\",\"buttonInfo\":\"mainMenu_buttonInfo__1DqPi\",\"buttonInfoContainer\":\"mainMenu_buttonInfoContainer__38ymi\",\"button\":\"mainMenu_button__3viG9\"};","import React from \"react\";\r\nimport styles from \"./nav.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <div className={styles.navContainer}>\r\n      <Link className={styles.logo} to=\"/fishv3/\">\r\n        Fincounter\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport styles from \"./lakeAccordion.module.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\n\r\nfunction LakeAccordion(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Accordion className={styles.accordian}>\r\n        {props.lakes.map((lake, index) => (\r\n          <div\r\n            onClick={() => {\r\n              props.selectLake(index);\r\n            }}\r\n            className={styles.lakeItem}\r\n          >\r\n            {lake.name}\r\n          </div>\r\n        ))}\r\n        <div className={styles.lakeItem}>New Lake</div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LakeAccordion;\r\n","import React from \"react\";\r\nimport styles from \"./lakeStats.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LakeStats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      {props.lakeIndex === null ? (\r\n        <div>Select a lake to fish</div>\r\n      ) : (\r\n        <div>\r\n          {\" \"}\r\n          {props.lakes[props.lakeIndex].name}\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              props.fishLake();\r\n            }}\r\n          >\r\n            Fish\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LakeStats;\r\n","import React from \"react\";\r\nimport styles from \"./sessionDash.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction SessionDash(props) {\r\n  return props.currentSession ? (\r\n    <div className={styles.container}>{props.lakes[props.lakeIndex].name}</div>\r\n  ) : (\r\n    <div className={styles.container}>\r\n      <div className={styles.lakeName}>{props.lakes[props.lakeIndex].name}</div>\r\n      <div>best bait style etc here</div>\r\n      <div>store coordinates of lake</div>\r\n      <div>look up temps</div>\r\n      <div className={styles.buttonContainer}>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className={styles.button}\r\n          onClick={props.resetIsFishing}\r\n        >\r\n          back\r\n        </Button>\r\n        <Button variant=\"success\" className={styles.button}>\r\n          Start session\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionDash;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./mainMenu.module.css\";\r\nimport LakeAccordion from \"./LakeAccordion\";\r\nimport LakeStats from \"./LakeStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SessionDash from \"./SessionDash\";\r\n\r\nfunction MainMenu(props) {\r\n  const [lakeSelected, setLakeSelected] = useState(null);\r\n  const [isFishing, setIsFishing] = useState(false);\r\n  const [dashIsFullscreen, setDashIsFullscreen] = useState(false);\r\n\r\n  const fishLake = (index) => {\r\n    setIsFishing(true);\r\n  };\r\n\r\n  const resetIsFishing = () => {\r\n    setIsFishing(false);\r\n    setLakeSelected(null);\r\n  };\r\n\r\n  const selectLake = (index) => {\r\n    setLakeSelected(index);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuContainer}>\r\n      {\" \"}\r\n      {isFishing ? (\r\n        <div\r\n          className={\r\n            dashIsFullscreen\r\n              ? styles.fullScreenSessionDash\r\n              : styles.sessionDashboard\r\n          }\r\n        >\r\n          <SessionDash\r\n            lakes={props.lakes}\r\n            lakeIndex={lakeSelected}\r\n            resetIsFishing={resetIsFishing}\r\n          ></SessionDash>{\" \"}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            dashIsFullscreen\r\n              ? styles.fullScreenFishingDash\r\n              : styles.fishingDashboard\r\n          }\r\n        >\r\n          <LakeAccordion\r\n            className={styles.lakeAccordion}\r\n            lakes={props.lakes}\r\n            selectLake={selectLake}\r\n          ></LakeAccordion>\r\n          <LakeStats\r\n            className={styles.lakeStats}\r\n            lakes={props.lakes}\r\n            lakeIndex={lakeSelected}\r\n            fishLake={fishLake}\r\n          ></LakeStats>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={styles.dashboardExtender}\r\n        onClick={() => setDashIsFullscreen(!dashIsFullscreen)}\r\n      ></div>\r\n      {!dashIsFullscreen ? (\r\n        <div className={styles.optionButtons}>\r\n          <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonInfoContainer}>\r\n              <div className={styles.buttonInfoHeader}>Manage variables</div>\r\n              <div className={styles.buttonInfo}>\r\n                look up, edit and create new lakes/baits..\r\n              </div>\r\n            </div>\r\n            <Link to=\"/fishv3/manage\">\r\n              <Button className={styles.button}> </Button>\r\n            </Link>\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonInfoContainer}>\r\n              <div className={styles.buttonInfoHeader}>Stats</div>\r\n              <div className={styles.buttonInfo}>\r\n                use stats to find the best variables for your session\r\n              </div>\r\n            </div>\r\n            <Link to=\"/fishv3/stats\">\r\n              <Button className={styles.button}> </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from \"react\";\r\nimport styles from \"./variableManager.module.css\";\r\n\r\nfunction VariableManager(props) {\r\n  return <div>manager</div>;\r\n}\r\n\r\nexport default VariableManager;\r\n","import React from \"react\";\r\nimport styles from \"./variableManagement.module.css\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport VariableManager from \"./VariableManager\";\r\n\r\nfunction VariableManagement(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.managementInfo}>\r\n        <div className={styles.infoHeader}>Variable Management</div>\r\n        <div className={styles.infoBody}>\r\n          you keep the casts when deleting variables\r\n        </div>\r\n      </div>\r\n      <ButtonGroup className={styles.variableSelectors}>\r\n        <Button>Lakes</Button>\r\n        <Button>Baits</Button>\r\n        <Button>Styles</Button>\r\n        <Button>Species</Button>\r\n      </ButtonGroup>\r\n      <VariableManager></VariableManager>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariableManagement;\r\n","import React from \"react\";\r\nimport styles from \"./stats.module.css\";\r\n\r\nfunction Stats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>{\"Stats & Tools\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\nimport styles from \"./app.module.css\";\nimport Nav from \"./nav/Nav\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MainMenu from \"./mainMenu/MainMenu\";\nimport VariableManagement from \"./variableManagement/VaraibleManagement\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Stats from \"./stats/Stats\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [\n        { name: \"Holton\", index: 0, casts: [] },\n        { name: \"AlderBy\", index: 1, casts: [] },\n        { name: \"Henstead\", index: 2, casts: [] },\n        { name: \"Wisset\", index: 3, casts: [] },\n        { name: \"Marsh Lane\", index: 4, casts: [] },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <Router>\n          <Nav></Nav>\n          <Switch>\n            <Route\n              path=\"/fishv3/\"\n              exact\n              render={(props) => <MainMenu lakes={this.state.lakes}></MainMenu>}\n            ></Route>\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/fishv3/manage\"\n              render={(props) => <VariableManagement></VariableManagement>}\n            ></Route>\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/fishv3/stats\"\n              render={(props) => <Stats></Stats>}\n            ></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}