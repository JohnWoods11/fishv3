{"version":3,"sources":["variable/variable.module.css","mainMenu/mainMenu.module.css","mainMenu/lakeStats.module.css","mainMenu/sessionDash.module.css","variableManagement/variableManager.module.css","variable/castList.module.css","variableManagement/variableManagement.module.css","mainMenu/lakeAccordion.module.css","mainMenu/extraLakeStats.module.css","nav/nav.module.css","stats/stats.module.css","variable/timeGraph.module.css","variable/dayGraph.module.css","app.module.css","nav/Nav.js","mainMenu/LakeAccordion.js","mainMenu/LakeStats.js","mainMenu/SessionDash.js","mainMenu/ExtraLakeStats.js","mainMenu/MainMenu.js","variableManagement/VariableManager.js","variableManagement/VaraibleManagement.js","stats/Stats.js","variable/TimeGraph.js","variable/DayGraph.js","variable/CastList.js","variable/Variable.js","DevData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","className","styles","navContainer","logo","to","LakeAccordion","container","Accordion","accordian","lakes","map","lake","index","Card","style","backgroundColor","currentIndex","color","onClick","selectLake","lakeItem","name","newLakeName","prompt","addLake","LakeStats","useState","toVariable","setToVariable","lakeIndex","lakeInfoContainer","infoHeader","infoBody","catches","castIndexes","length","mSToReadable","duration","timeData","isFullScreen","buttonContainer","Button","button","variant","type","setCurrentVariable","fishLake","SessionDash","currentSession","lakeName","resetIsFishing","ExtraLakeStats","variable","MainMenu","lakeSelected","setLakeSelected","isFishing","setIsFishing","dashIsFullScreen","setDashIsFullScreen","menuContainer","fullScreenSessionDash","sessionDashboard","fullScreenFishingDash","fishingDashboard","lakeAccordion","lakeStats","extraStats","dashboardExtender","optionButtons","buttonInfoContainer","buttonInfoHeader","buttonInfo","VariableManager","variables","Toggle","as","Header","eventKey","variableHeader","goToVar","buttons","event","editVarName","stopPropagation","deleteVar","console","log","deleteVariable","newVariable","addVariable","VariableManagement","filter","setFilter","addBait","addStyle","addSpecies","variableIndex","managementInfo","ButtonGroup","variableSelectors","baits","species","block","Stats","bait","castHistory","cast","header","TimeGraph","times","time","hour","height","durationFished","width","DayGraph","days","day","CastList","numberDisplayed","setNumberDisplayed","displayedCasts","slice","accordion","castIndex","catch","date","mSToDate","reelInTime","hBox","getUTCHours","getUTCMinutes","getUTCDate","getUTCMonth","getUTCFullYear","headerInfo","Collapse","Body","castDate","castTime","catchDate","toFixed","weight","bodyInfo","showItem","Variable","dailyinfo","i","push","yearlyInfo","variableType","undefined","castDuration","catchTime","Date","setMilliseconds","reelInHour","reelInMinute","reelInDate","reelInMonth","reelInHourMins","minutes","splice","navButton","prevVar","variableName","nextVar","basicVarInfo","basicInfo","mSToHours","heaviestCatch","timeInfo","dailyTime","dailyYScale","dailyXScale","textAlign","yearlyTime","monthXScale","month","DevData","App","newLakes","state","newLake","setState","localStorage","setItem","JSON","stringify","baitName","newBaits","newBait","styleName","newStyles","newStyle","speciesName","NewSpecies","NewSpecie","property","newName","editedVariables","alert","updatedVariables","currentVariable","newCurrentVariable","milliseconds","seconds","secondsNoDecimal","hours","setTime","getItem","appData","parse","this","app","path","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.664afcf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"variable_container__3L8A9\",\"variableHeader\":\"variable_variableHeader__3tUkl\",\"variableName\":\"variable_variableName__7kgJy\",\"navButton\":\"variable_navButton__3T1Yd\",\"map\":\"variable_map__uuXe6\",\"basicVarInfo\":\"variable_basicVarInfo__1IyE4\",\"spaceHolderOne\":\"variable_spaceHolderOne__Ytatn\",\"basicInfo\":\"variable_basicInfo__3S7y0\",\"timeInfo\":\"variable_timeInfo__2wpSW\",\"dailyTime\":\"variable_dailyTime__1TukA\",\"dailyYScale\":\"variable_dailyYScale__QjBIm\",\"dailyXScale\":\"variable_dailyXScale__3B3yy\",\"yearlyTime\":\"variable_yearlyTime___rsZX\",\"castHistory\":\"variable_castHistory__2oBQb\",\"monthXScale\":\"variable_monthXScale__2BNJK\",\"month\":\"variable_month__3Epnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"mainMenu_menuContainer__2lbtJ\",\"fishingDashboard\":\"mainMenu_fishingDashboard__13YPx\",\"fullScreenFishingDash\":\"mainMenu_fullScreenFishingDash__3SUB2\",\"sessionDashboard\":\"mainMenu_sessionDashboard__3kllV\",\"fullScreenSessionDash\":\"mainMenu_fullScreenSessionDash__2kkBM\",\"extraStats\":\"mainMenu_extraStats__2ez6A\",\"dashboardExtender\":\"mainMenu_dashboardExtender__36ItV\",\"optionButtons\":\"mainMenu_optionButtons__2dNGa\",\"buttonContainer\":\"mainMenu_buttonContainer__2gQxZ\",\"buttonInfoHeader\":\"mainMenu_buttonInfoHeader__1JZ4-\",\"buttonInfo\":\"mainMenu_buttonInfo__1yF0Z\",\"buttonInfoContainer\":\"mainMenu_buttonInfoContainer__2c4Im\",\"button\":\"mainMenu_button__AaVI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeStats_container__2jYqZ\",\"button\":\"lakeStats_button__10_Dl\",\"lakeInfoContainer\":\"lakeStats_lakeInfoContainer__1kii1\",\"infoHeader\":\"lakeStats_infoHeader__1mHBU\",\"infoBody\":\"lakeStats_infoBody__3eA2D\",\"timeData\":\"lakeStats_timeData__2ybsw\",\"buttonContainer\":\"lakeStats_buttonContainer__31SOM\",\"buttonContainerFullScreen\":\"lakeStats_buttonContainerFullScreen__3-hc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sessionDash_container__3oW1P\",\"buttonContainer\":\"sessionDash_buttonContainer__189WS\",\"button\":\"sessionDash_button__hV3Jv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"variableManager_container__1AER7\",\"card\":\"variableManager_card__1IeRM\",\"variableHeader\":\"variableManager_variableHeader__1qTMW\",\"variableBody\":\"variableManager_variableBody__11_V9\",\"buttons\":\"variableManager_buttons__2RYjf\",\"button\":\"variableManager_button__1DvVa\",\"variable\":\"variableManager_variable__2oHWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hBox\":\"castList_hBox__2zqpD\",\"showItem\":\"castList_showItem__qIeOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoHeader\":\"variableManagement_infoHeader__10Fqy\",\"infoBody\":\"variableManagement_infoBody__2XhtN\",\"variableSelectors\":\"variableManagement_variableSelectors__3VrNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeAccordion_container__2mOS-\",\"lakeItem\":\"lakeAccordion_lakeItem___xWKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"extraLakeStats_container__23g4Q\",\"buttonContainer\":\"extraLakeStats_buttonContainer__2qawb\",\"button\":\"extraLakeStats_button__8TRuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"nav_navContainer__27mSr\",\"logo\":\"nav_logo__2_XMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"stats_header__1TAYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timeGraph_container__1UZ5B\",\"hour\":\"timeGraph_hour__1LvGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dayGraph_container__3gvi2\",\"day\":\"dayGraph_day__kYEkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3ALCk\"};","import React from \"react\";\nimport styles from \"./nav.module.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav(props) {\n  return (\n    <div className={styles.navContainer}>\n      <Link className={styles.logo} to=\"/fishv3/\">\n        Fincounter\n      </Link>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport styles from \"./lakeAccordion.module.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction LakeAccordion(props) {\n  const addLake = () => {\n    let newLakeName = prompt(\"Enter the new lakes name:\");\n    if (newLakeName) {\n      props.addLake(newLakeName);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Accordion className={styles.accordian}>\n        {props.lakes.map((lake, index) =>\n          lake === null ? null : (\n            <Card\n              style={{\n                backgroundColor:\n                  index === props.currentIndex ? \"rgb(0,123,255)\" : \"white\",\n                color: index === props.currentIndex ? \"white\" : \"black\",\n              }}\n              onClick={() => {\n                props.selectLake(index);\n              }}\n              className={styles.lakeItem}\n            >\n              {lake.name}\n            </Card>\n          )\n        )}\n        <Card className={styles.lakeItem} onClick={addLake}>\n          New Lake\n        </Card>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default LakeAccordion;\n","import React, { useState } from \"react\";\nimport styles from \"./lakeStats.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction LakeStats(props) {\n  const [toVariable, setToVariable] = useState(false);\n\n  const goToVar = (type, index) => {\n    props.setCurrentVariable(type, index);\n    setToVariable(true);\n  };\n\n  return toVariable ? (\n    <Redirect to=\"/fishv3/variable\"></Redirect>\n  ) : (\n    <div className={styles.container}>\n      {props.lakeIndex === null ? (\n        <div>Select a lake to fish</div>\n      ) : (\n        <div className={styles.container}>\n          {\" \"}\n          <div className={styles.lakeInfoContainer}>\n            <div className={styles.infoHeader}>\n              {props.lakes[props.lakeIndex].name}\n            </div>\n            <div className={styles.infoBody}>\n              Catches: {props.lakes[props.lakeIndex].lakes[0].catches}{\" \"}\n            </div>\n            <div className={styles.infoBody}>\n              Casts: {props.lakes[props.lakeIndex].lakes[0].castIndexes.length}\n            </div>\n            <div className={styles.infoBody}>\n              Time Fished:{\" \"}\n              {props.mSToReadable(\n                props.lakes[props.lakeIndex].lakes[0].duration\n              )}{\" \"}\n            </div>\n            <div className={styles.infoBody}>Biggest Catch: </div>\n            <div className={styles.timeData}>to do</div>\n          </div>\n          {props.isFullScreen ? null : (\n            <div className={styles.buttonContainer}>\n              {\" \"}\n              <Button\n                className={styles.button}\n                variant=\"info\"\n                onClick={() => {\n                  goToVar(\"lakes\", props.lakeIndex);\n                }}\n              >\n                Lake\n              </Button>\n              <Button\n                className={styles.button}\n                variant=\"success\"\n                onClick={() => {\n                  props.fishLake();\n                }}\n              >\n                Fish\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LakeStats;\n","import React from \"react\";\nimport styles from \"./sessionDash.module.css\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction SessionDash(props) {\n  return props.currentSession ? (\n    <div className={styles.container}>{props.lakes[props.lakeIndex].name}</div>\n  ) : (\n    <div className={styles.container}>\n      <div className={styles.lakeName}>{props.lakes[props.lakeIndex].name}</div>\n      <div>best bait style etc here</div>\n      <div>store coordinates of lake</div>\n      <div>look up temps</div>\n      <div className={styles.buttonContainer}>\n        <Button\n          variant=\"secondary\"\n          className={styles.button}\n          onClick={props.resetIsFishing}\n        >\n          back\n        </Button>\n        <Button variant=\"success\" className={styles.button}>\n          Start session\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default SessionDash;\n","import React, { useState } from \"react\";\nimport styles from \"./extraLakeStats.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction ExtraLakeStats(props) {\n  const [toVariable, setToVariable] = useState(false);\n\n  const goToVar = (variable) => {\n    props.setCurrentVariable(variable);\n    setToVariable(true);\n  };\n\n  return toVariable ? (\n    <Redirect to=\"/fishv3/variable\"></Redirect>\n  ) : (\n    <div className={styles.container}>\n      <div>More stats</div>\n      {props.lakeIndex !== null ? (\n        <div className={styles.buttonContainer}>\n          <Button\n            className={styles.button}\n            variant=\"info\"\n            onClick={() => {\n              goToVar(props.lakes[props.lakeIndex]);\n            }}\n          >\n            Lake\n          </Button>\n          <Button\n            className={styles.button}\n            variant=\"success\"\n            onClick={() => {\n              props.fishLake();\n            }}\n          >\n            Fish\n          </Button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ExtraLakeStats;\n","import React, { useState } from \"react\";\nimport styles from \"./mainMenu.module.css\";\nimport LakeAccordion from \"./LakeAccordion\";\nimport LakeStats from \"./LakeStats\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport SessionDash from \"./SessionDash\";\nimport ExtraLakeStats from \"./ExtraLakeStats\";\n\nfunction MainMenu(props) {\n  const [lakeSelected, setLakeSelected] = useState(null);\n  const [isFishing, setIsFishing] = useState(false);\n  const [dashIsFullScreen, setDashIsFullScreen] = useState(false);\n\n  const fishLake = (index) => {\n    setIsFishing(true);\n  };\n\n  const resetIsFishing = () => {\n    setIsFishing(false);\n    setLakeSelected(null);\n  };\n\n  const selectLake = (index) => {\n    setLakeSelected(index);\n  };\n\n  return (\n    <div className={styles.menuContainer}>\n      {\" \"}\n      {isFishing ? (\n        <div\n          className={\n            dashIsFullScreen\n              ? styles.fullScreenSessionDash\n              : styles.sessionDashboard\n          }\n        >\n          <SessionDash\n            isFullScreen={dashIsFullScreen}\n            lakes={props.lakes}\n            lakeIndex={lakeSelected}\n            resetIsFishing={resetIsFishing}\n          ></SessionDash>{\" \"}\n        </div>\n      ) : (\n        <div\n          className={\n            dashIsFullScreen\n              ? styles.fullScreenFishingDash\n              : styles.fishingDashboard\n          }\n        >\n          <LakeAccordion\n            className={styles.lakeAccordion}\n            lakes={props.lakes}\n            selectLake={selectLake}\n            currentIndex={lakeSelected}\n            addLake={props.addLake}\n          ></LakeAccordion>\n          <LakeStats\n            className={styles.lakeStats}\n            isFullScreen={dashIsFullScreen}\n            lakes={props.lakes}\n            lakeIndex={lakeSelected}\n            fishLake={fishLake}\n            mSToReadable={props.mSToReadable}\n            setCurrentVariable={props.setCurrentVariable}\n          ></LakeStats>\n        </div>\n      )}\n      {dashIsFullScreen && !isFishing ? (\n        <div className={styles.extraStats}>\n          <ExtraLakeStats\n            lakes={props.lakes}\n            lakeIndex={lakeSelected}\n            fishLake={fishLake}\n            setCurrentVariable={props.setCurrentVariable}\n          ></ExtraLakeStats>\n        </div>\n      ) : null}\n      <div\n        className={styles.dashboardExtender}\n        onClick={() => setDashIsFullScreen(!dashIsFullScreen)}\n      >\n        {!dashIsFullScreen ? \"Full screen\" : \"Exit full screen\"}\n      </div>\n      {!dashIsFullScreen ? (\n        <div className={styles.optionButtons}>\n          <div className={styles.buttonContainer}>\n            <div className={styles.buttonInfoContainer}>\n              <div className={styles.buttonInfoHeader}>\n                Manage user variables\n              </div>\n              <div className={styles.buttonInfo}>\n                look up, edit and create new lakes/baits..\n              </div>\n            </div>\n            <Link to=\"/fishv3/manage\">\n              <Button className={styles.button}> </Button>\n            </Link>\n          </div>\n          <div className={styles.buttonContainer}>\n            <div className={styles.buttonInfoContainer}>\n              <div className={styles.buttonInfoHeader}>Stats</div>\n              <div className={styles.buttonInfo}>\n                use stats to find the best variables for your session\n              </div>\n            </div>\n            <Link to=\"/fishv3/stats\">\n              <Button className={styles.button}> </Button>\n            </Link>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default MainMenu;\n","import React, { useState } from \"react\";\nimport styles from \"./variableManager.module.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction VariableManager(props) {\n  const [toVariable, setToVariable] = useState(false);\n\n  const addVariable = () => {\n    let newVariable = prompt(\"New variable:\");\n    if (newVariable) {\n      props.addVariable(newVariable);\n    }\n  };\n\n  const goToVar = (index) => {\n    props.setCurrentVariable(index);\n    setToVariable(true);\n  };\n\n  const editVarName = (event, index) => {\n    props.editVarName(index);\n    event.stopPropagation();\n  };\n\n  const deleteVariable = (event, index) => {\n    props.deleteVar(index);\n    console.log(index);\n    event.stopPropagation();\n  };\n\n  return toVariable ? (\n    <Redirect to=\"/fishv3/variable\"> </Redirect>\n  ) : (\n    <div className={styles.container}>\n      <Accordion>\n        {props.variables.map((variable, index) =>\n          variable == null ? null : (\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey={index}>\n                <div\n                  className={styles.variableHeader}\n                  onClick={() => {\n                    goToVar(index);\n                  }}\n                >\n                  <div>{variable.name}</div>\n                  <div className={styles.buttons}>\n                    <Button\n                      className={styles.button}\n                      variant=\"secondary\"\n                      onClick={(event) => {\n                        editVarName(event, index);\n                      }}\n                    >\n                      <div>&#9998;</div>\n                    </Button>\n\n                    <Button\n                      className={styles.button}\n                      variant=\"danger\"\n                      onClick={(event) => {\n                        deleteVariable(event, index);\n                      }}\n                    >\n                      &#10006;\n                    </Button>\n                  </div>\n                </div>\n              </Accordion.Toggle>\n            </Card>\n          )\n        )}\n        <Accordion.Toggle\n          as={Card.Header}\n          style={{ backgroundColor: \"lightGray\" }}\n          eventKey=\"0\"\n        >\n          <div\n            className={styles.variableHeader}\n            onClick={() => {\n              addVariable();\n            }}\n          >\n            Add variable\n          </div>\n        </Accordion.Toggle>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default VariableManager;\n","import React, { useState } from \"react\";\nimport styles from \"./variableManagement.module.css\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport VariableManager from \"./VariableManager\";\nimport { Link } from \"react-router-dom\";\n\nfunction VariableManagement(props) {\n  const [filter, setFilter] = useState(\"lakes\");\n\n  const addVariable = (newVariable) => {\n    switch (filter) {\n      case \"lakes\":\n        props.addLake(newVariable);\n        break;\n      case \"baits\":\n        props.addBait(newVariable);\n        break;\n      case \"styles\":\n        props.addStyle(newVariable);\n        break;\n      case \"species\":\n        props.addSpecies(newVariable);\n    }\n  };\n\n  const editVarName = (variableIndex) => {\n    props.editVarName(filter, variableIndex);\n  };\n\n  const deleteVariable = (variableIndex) => {\n    props.deleteVariable(filter, variableIndex);\n  };\n\n  const setCurrentVariable = (variableIndex) => {\n    props.setCurrentVariable(filter, variableIndex);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.managementInfo}>\n        <div className={styles.infoHeader}>My variables</div>\n        <div className={styles.infoBody}>\n          you keep the casts when deleting variables\n        </div>\n      </div>\n      <ButtonGroup className={styles.variableSelectors}>\n        <Button\n          variant={filter === \"lakes\" ? \"success\" : \"primary\"}\n          onClick={() => {\n            setFilter(\"lakes\");\n          }}\n        >\n          Lakes\n        </Button>\n        <Button\n          variant={filter === \"baits\" ? \"success\" : \"primary\"}\n          onClick={() => {\n            setFilter(\"baits\");\n          }}\n        >\n          Baits\n        </Button>\n        <Button\n          variant={filter === \"styles\" ? \"success\" : \"primary\"}\n          onClick={() => {\n            setFilter(\"styles\");\n          }}\n        >\n          Styles\n        </Button>\n        <Button\n          variant={filter === \"species\" ? \"success\" : \"primary\"}\n          onClick={() => {\n            setFilter(\"species\");\n          }}\n        >\n          Species\n        </Button>\n      </ButtonGroup>\n\n      {filter === \"baits\" ? (\n        <VariableManager\n          variables={props.baits}\n          addVariable={addVariable}\n          setCurrentVariable={setCurrentVariable}\n          editVarName={editVarName}\n          deleteVar={deleteVariable}\n        ></VariableManager>\n      ) : filter === \"styles\" ? (\n        <VariableManager\n          variables={props.styles}\n          addVariable={addVariable}\n          setCurrentVariable={setCurrentVariable}\n          editVarName={editVarName}\n          deleteVar={deleteVariable}\n        ></VariableManager>\n      ) : filter === \"species\" ? (\n        <VariableManager\n          variables={props.species}\n          addVariable={addVariable}\n          setCurrentVariable={setCurrentVariable}\n          editVarName={editVarName}\n          deleteVar={deleteVariable}\n        ></VariableManager>\n      ) : (\n        <VariableManager\n          variables={props.lakes}\n          addVariable={addVariable}\n          setCurrentVariable={setCurrentVariable}\n          editVarName={editVarName}\n          deleteVar={deleteVariable}\n        ></VariableManager>\n      )}\n\n      <Link to=\"/fishv3/\">\n        <Button variant=\"primary\" block>\n          back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default VariableManagement;\n","import React from \"react\";\nimport styles from \"./stats.module.css\";\n\nfunction Stats(props) {\n  let species = [0, 0, 0, 0];\n  let bait = [0, 0, 0, 0];\n  let style = [0, 0, 0, 0];\n  props.castHistory.map((cast, index) => {\n    species[cast.species] += 1;\n    bait[cast.bait] += 1;\n    style[cast.style] += 1;\n  });\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>{\"Stats & Tools\"}</div>\n      {species.map((species, index) => (\n        <div>\n          {props.species[index].name}: {species}\n        </div>\n      ))}\n      {bait.map((bait, index) => (\n        <div>\n          {props.baits[index].name}: {bait}\n        </div>\n      ))}\n      {style.map((style, index) => (\n        <div>\n          {props.styles[index].name}: {style}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\nimport styles from \"./timeGraph.module.css\";\n\nfunction TimeGraph(props) {\n  return (\n    <div className={styles.container}>\n      {props.times.map((time, index) => (\n        <div className={styles.hour}>\n          <div\n            style={{\n              height: `${\n                time.durationFished / 60 / time.catches < 25\n                  ? `${(time.durationFished / 60 / time.catches) * 4}%`\n                  : \"100%\"\n              }`,\n              width: `${90 / 24}vw`,\n              backgroundColor: \"gray\",\n            }}\n          ></div>\n          <div\n            style={{\n              height: `${\n                time.durationFished / 60 / time.catches < 25\n                  ? `${(25 - time.durationFished / 60 / time.catches) * 4}%`\n                  : \"0%\"\n              }`,\n              width: `${90 / 24}vw`,\n              backgroundColor: \"green\",\n            }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TimeGraph;\n","import React from \"react\";\nimport styles from \"./dayGraph.module.css\";\n\nfunction DayGraph(props) {\n  return (\n    <div className={styles.container}>\n      {props.days.map((day, index) => (\n        <div className={styles.day}>\n          <div\n            style={{\n              height: `${\n                day.durationFished / 60 / day.catches < 25\n                  ? `${(day.durationFished / 60 / day.catches) * 4}%`\n                  : \"100%\"\n              }`,\n              width: `${90 / 366}vw`,\n              backgroundColor: \"gray\",\n            }}\n          ></div>\n          <div\n            style={{\n              height: `${\n                day.durationFished / 60 / day.catches < 25\n                  ? `${(25 - day.durationFished / 60 / day.catches) * 4}%`\n                  : \"0%\"\n              }`,\n              width: `${90 / 366}vw`,\n              backgroundColor: \"green\",\n            }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default DayGraph;\n","import React, { useState } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport styles from \"./castList.module.css\";\n\nfunction CastList(props) {\n  const [numberDisplayed, setNumberDisplayed] = useState(10);\n  let displayedCasts = props.castIndexes.slice(-numberDisplayed);\n\n  const headerInfo = (cast) => {\n    let date = props.mSToDate(cast.reelInTime);\n    return (\n      <div className={styles.hBox}>\n        <div>{props.lakes[cast.lake].name}</div>\n        <div className={styles.hBox}>\n          <div>{`${\n            date.getUTCHours() < 10\n              ? `0${date.getUTCHours()}`\n              : date.getUTCHours()\n          }:${\n            date.getUTCMinutes() < 10\n              ? `0${date.getUTCMinutes()}`\n              : date.getUTCMinutes()\n          }`}</div>\n          <div>\n            {`${date.getUTCDate()}/${\n              date.getUTCMonth() + 1\n            }/${date.getUTCFullYear()}\n          `}\n          </div>{\" \"}\n        </div>\n      </div>\n    );\n  };\n\n  const bodyInfo = (cast) => {\n    let castDate = props.mSToDate(cast.castTime);\n    let catchDate = props.mSToDate(cast.reelInTime);\n    return (\n      <div className={styles.hBox}>\n        <div>\n          <div>{`${props.styles[cast.style].name} with ${\n            props.baits[cast.bait].name\n          }`}</div>\n\n          <div>\n            <div>\n              {`Cast Time: ${\n                castDate.getUTCHours() < 10\n                  ? `0${castDate.getUTCHours()}`\n                  : castDate.getUTCHours()\n              }:${\n                castDate.getUTCMinutes() < 10\n                  ? `0${castDate.getUTCMinutes()}`\n                  : castDate.getUTCMinutes()\n              }`}\n            </div>\n            <div>{`Duration: ${(\n              cast.duration / 60000\n            ).toFixed()} minutes`}</div>\n          </div>\n        </div>\n        {cast.catch ? (\n          <div>\n            <div>\n              {cast.weight}lb {props.species[cast.species].name}\n            </div>\n            <div>{`Catch Time: ${\n              catchDate.getUTCHours() < 10\n                ? `0${catchDate.getUTCHours()}`\n                : catchDate.getUTCHours()\n            }:${\n              catchDate.getUTCMinutes < 10\n                ? `0${catchDate.getUTCMinutes()}`\n                : catchDate.getUTCMinutes()\n            }`}</div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Accordion className={styles.accordion}>\n        {displayedCasts.map((castIndex, index) => (\n          <Card>\n            <Accordion.Toggle\n              as={Card.Header}\n              eventKey={index}\n              style={{\n                backgroundColor: props.castHistory[castIndex].catch\n                  ? \"green\"\n                  : \"red\",\n              }}\n            >\n              <div>{headerInfo(props.castHistory[castIndex])}</div>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={index}>\n              <Card.Body>{bodyInfo(props.castHistory[castIndex])}</Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        ))}\n        <Card\n          className={styles.showItem}\n          onClick={() => setNumberDisplayed(numberDisplayed + 10)}\n        >\n          show more\n        </Card>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default CastList;\n","import React from \"react\";\nimport styles from \"./variable.module.css\";\nimport TimeGraph from \"./TimeGraph\";\nimport { Redirect } from \"react-router-dom\";\nimport DayGraph from \"./DayGraph\";\nimport CastList from \"./CastList\";\n\nfunction Variable(props) {\n  console.log(props.variable);\n  const dailyinfo = [];\n  for (let i = 0; i < 24; i++) {\n    dailyinfo.push({ catches: 0, durationFished: 0 });\n  }\n\n  let yearlyInfo = [];\n  for (let i = 0; i < 372; i++) {\n    yearlyInfo.push({ catches: 0, durationFished: 0 });\n  }\n  if (!props.variable.variableType) {\n    return <Redirect to=\"/fishv3/manage\"></Redirect>;\n  }\n\n  let variable = null;\n\n  if (\n    props[props.variable.variableType][props.variable.variableIndex] !== null\n  ) {\n    variable =\n      props.variable.variableType === \"lakes\"\n        ? props.lakes[props.variable.variableIndex].lakes[0]\n        : props[props.variable.variableType][props.variable.variableIndex];\n    if (variable.castIndexes === undefined) {\n      return <Redirect to=\"/fishv3/manage\"> </Redirect>;\n    }\n    variable.castIndexes.map((castIndex, index) => {\n      let reelInTime = props.mSToDate(props.castHistory[castIndex].reelInTime);\n      let castDuration = props.castHistory[castIndex].duration / 60000;\n      let catchTime = new Date();\n      catchTime.setMilliseconds(reelInTime);\n\n      let reelInHour = catchTime.getUTCHours();\n      let reelInMinute = catchTime.getUTCMinutes();\n      let reelInDate = catchTime.getUTCDate();\n      let reelInMonth = catchTime.getUTCMonth();\n\n      if (props.castHistory[castIndex].catch) {\n        dailyinfo[reelInHour].catches += 1;\n        yearlyInfo[reelInMonth * 31 + reelInDate - 1].catches += 1;\n      }\n      let reelInHourMins = reelInMinute;\n\n      dailyinfo[reelInHour].durationFished += reelInHourMins;\n      for (\n        let hour = 1, minutes = castDuration - reelInHourMins;\n        minutes > 0;\n        hour++\n      ) {\n        if (minutes > 59) {\n          minutes -= 60;\n          dailyinfo[(reelInHour + 24 - hour) % 24].durationFished += 60;\n        } else {\n          dailyinfo[(reelInHour + 24 - hour) % 24].durationFished += minutes;\n          minutes -= minutes;\n        }\n      }\n      yearlyInfo[\n        reelInMonth * 31 + reelInDate - 1\n      ].durationFished += castDuration;\n    });\n\n    yearlyInfo.splice(59, 3);\n    yearlyInfo.splice(120, 1);\n    yearlyInfo.splice(181, 1);\n    yearlyInfo.splice(273, 1);\n    yearlyInfo.splice(334, 1);\n  }\n\n  return variable == null ? null : (\n    <div className={styles.container}>\n      <div className={styles.variableHeader}>\n        <div className={styles.navButton} onClick={props.prevVar}>\n          &#x2190;\n        </div>\n        <div className={styles.variableName}>{variable.name}</div>\n        <div className={styles.navButton} onClick={props.nextVar}>\n          &#x2192;\n        </div>\n      </div>\n      <div className={styles.basicVarInfo}>\n        <div className={styles.map}>\n          <div>\n            {props.variable.variableType === \"lakes\"\n              ? \"Geolocation and aerialimage here!\"\n              : null}\n          </div>\n        </div>\n        <div className={styles.basicInfo}>\n          <div>\n            <b>Time cast:</b> {props.mSToHours(variable.duration)}\n          </div>\n          <div>\n            <b>Casts:</b> {variable.castIndexes.length}\n          </div>\n          <div>\n            <b>Catches:</b> {variable.catches}\n          </div>\n          <div>\n            <b>PB:</b>{\" \"}\n            {variable.heaviestCatch.weight === 0\n              ? \"NA\"\n              : `${variable.heaviestCatch.weight} ${variable.heaviestCatch.species}`}\n          </div>\n          <div></div>\n        </div>\n      </div>\n      <div className={styles.timeInfo}>\n        <div>\n          <div className={styles.dailyTime}>\n            <div className={styles.dailyYScale}>\n              <div>0h</div>\n              <div>5h</div>\n              <div>10h</div>\n              <div>15h</div>\n              <div>20h+</div>\n            </div>\n            <TimeGraph times={dailyinfo}></TimeGraph>\n          </div>\n          <div className={styles.dailyXScale}>\n            {dailyinfo.map((time, index) => (\n              <div style={{ width: `${90 / 24}vw`, textAlign: \"center\" }}>\n                {index}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div>\n          <div className={styles.yearlyTime}>\n            <div className={styles.dailyYScale}>\n              <div>0h</div>\n              <div>5h</div>\n              <div>10h</div>\n              <div>15h</div>\n              <div>20h+</div>\n            </div>\n            <DayGraph days={yearlyInfo}></DayGraph>\n          </div>\n          <div className={styles.monthXScale}>\n            <div className={styles.month}>J</div>\n            <div className={styles.month}>F</div>\n            <div className={styles.month}>M</div>\n            <div className={styles.month}>A</div>\n            <div className={styles.month}>M</div>\n            <div className={styles.month}> J</div>\n            <div className={styles.month}>J</div>\n            <div className={styles.month}>A</div>\n            <div className={styles.month}>S</div>\n            <div className={styles.month}>O</div>\n            <div className={styles.month}>N</div>\n            <div className={styles.month}>D</div>\n          </div>\n        </div>\n      </div>\n      <div className={styles.castHistory}>\n        <CastList\n          castHistory={props.castHistory}\n          castIndexes={variable.castIndexes}\n          species={props.species}\n          styles={props.styles}\n          lakes={props.lakes}\n          baits={props.baits}\n          mSToDate={props.mSToDate}\n        ></CastList>\n      </div>\n    </div>\n  );\n}\n\nexport default Variable;\n","function DevData(castsWanted) {\n  console.log(\"hello world\");\n  let devData = {};\n  let lakes = [\n    {\n      name: \"Holton\",\n      lakes: [\n        {\n          name: \"Holton\",\n          castIndexes: [],\n          duration: 0,\n          catches: 0,\n          heaviestCatch: { weight: 0, species: null },\n          fish: [30, 20, 10, 40],\n        },\n      ],\n    },\n    {\n      name: \"Alderby\",\n      lakes: [\n        {\n          name: \"Alderby\",\n          castIndexes: [],\n          duration: 0,\n          catches: 0,\n          heaviestCatch: { weight: 0, species: null },\n          fish: [10, 60, 10, 20],\n        },\n      ],\n    },\n    {\n      name: \"Henstead\",\n      lakes: [\n        {\n          name: \"Henstead\",\n          castIndexes: [],\n          duration: 0,\n          catches: 0,\n          heaviestCatch: { weight: 0, species: null },\n          fish: [40, 40, 0, 20],\n        },\n      ],\n    },\n    {\n      name: \"Wisset\",\n      lakes: [\n        {\n          name: \"Wisset\",\n          castIndexes: [],\n          duration: 0,\n          catches: 0,\n          heaviestCatch: { weight: 0, species: null },\n          fish: [30, 30, 10, 30],\n        },\n      ],\n    },\n  ];\n  let species = [\n    {\n      name: \"Carp\",\n      castIndexes: [],\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      stylePref: [0.3, 0.6, 0, 0.8],\n      baitPref: [0.6, 0.5, 0.4, 0],\n    },\n    {\n      name: \"Roach\",\n      castIndexes: [],\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      stylePref: [0.8, 0.2, 0.1, 0.3],\n      baitPref: [0.6, 0.8, 0.2, 0],\n    },\n    {\n      name: \"Pike\",\n      castIndexes: [],\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      stylePref: [0.4, 0.4, 0.8, 0.6],\n      baitPref: [0.3, 0.5, 0, 0.8],\n    },\n    {\n      name: \"Perch\",\n      castIndexes: [],\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      stylePref: [0.3, 0.3, 0.7, 0.4],\n      baitPref: [0.4, 0.5, 0.4, 0.8],\n    },\n  ];\n  let baits = [\n    {\n      name: \"Sweetcorn\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n    {\n      name: \"Maggots\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n    {\n      name: \"Bread\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n    {\n      name: \"Lure\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n  ];\n  let styles = [\n    {\n      name: \"Float\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n    {\n      name: \"Ledger\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n    {\n      name: \"Spin\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n    {\n      name: \"Feeder\",\n      castIndexes: [],\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n    },\n  ];\n  let devCasts = [];\n\n  let getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  for (let i = 0; i < castsWanted; i++) {\n    //create cast\n    //get lake\n    let castLake = getRandomInt(lakes.length);\n    //get cast type\n    let castBait = getRandomInt(baits.length);\n    let castStyle = getRandomInt(styles.length);\n\n    //cast times 31557600000ms = 1y\n    let today = Date.now();\n\n    let castCastTime = today - getRandomInt(31557600000);\n    let castDuration = getRandomInt(20000000) + 40000;\n    let castReelInTime = castCastTime + castDuration;\n\n    let catchTime = new Date();\n    catchTime.setMilliseconds(castReelInTime);\n    let hourMultiplier = 0;\n    let dayMultiplier = 0;\n    //multipliers decrease chance\n    //equation produces realistic catch/time data\n    hourMultiplier = Math.abs(catchTime.getUTCHours() - 12);\n    hourMultiplier = (hourMultiplier + 1) / 6;\n\n    //equation produces realistic catch/date data\n    dayMultiplier = Math.abs(catchTime.getUTCMonth() - 7);\n    dayMultiplier = dayMultiplier + 1;\n    let castCatch = 0;\n    if (getRandomInt(dayMultiplier * hourMultiplier) < 1) {\n      castCatch = 1;\n    }\n\n    //cast user variables\n\n    let castSpecies = getRandomInt(100);\n    let previousSpecies = 0;\n    let castWeight = Number((Math.random() * 250).toFixed(2));\n\n    for (let i = 0; i < lakes[castLake].lakes[0].fish.length; i++) {\n      let speciesDivider = lakes[castLake].lakes[0].fish[i];\n      speciesDivider += previousSpecies;\n\n      if (castSpecies <= speciesDivider) {\n        castSpecies = i;\n        break;\n      } else {\n        previousSpecies = speciesDivider;\n      }\n    }\n\n    let catchBaitPref = species[castSpecies].baitPref[castBait];\n    let catchStylePref = species[castSpecies].stylePref[castStyle];\n\n    let variableMultiplier = (catchBaitPref + catchStylePref) / 2;\n    if (variableMultiplier < 0.5) {\n      castCatch = 0;\n      castSpecies = null;\n      castWeight = 0;\n    }\n\n    //add cast to cast history\n    devCasts.push({\n      catch: castCatch,\n      castTime: castCastTime,\n      reelInTime: castReelInTime,\n      duration: castDuration,\n      lake: castLake,\n      bait: castBait,\n      style: castStyle,\n      species: castSpecies,\n      weight: castWeight,\n    });\n\n    //link used variables to cast history entry\n\n    lakes[castLake].lakes[0].castIndexes.push(i);\n    baits[castBait].castIndexes.push(i);\n    styles[castStyle].castIndexes.push(i);\n    if (castCatch) {\n      species[castSpecies].castIndexes.push(i);\n    }\n\n    //update variable data\n    lakes[castLake].lakes[0].duration += castDuration;\n    lakes[castLake].lakes[0].catches += castCatch;\n    if (castWeight > lakes[castLake].lakes[0].heaviestCatch.weight) {\n      lakes[castLake].lakes[0].heaviestCatch.species =\n        species[castSpecies].name;\n      lakes[castLake].lakes[0].heaviestCatch.weight = castWeight.toFixed(2);\n    }\n    baits[castBait].duration += castDuration;\n    baits[castBait].catches += castCatch;\n    if (castWeight > baits[castBait].heaviestCatch.weight) {\n      baits[castBait].heaviestCatch.species = species[castSpecies].name;\n      baits[castBait].heaviestCatch.weight = castWeight.toFixed(2);\n    }\n    styles[castStyle].duration += castDuration;\n    styles[castStyle].catches += castCatch;\n    if (castWeight > styles[castStyle].heaviestCatch.weight) {\n      styles[castStyle].heaviestCatch.species = species[castSpecies].name;\n      styles[castStyle].heaviestCatch.weight = castWeight.toFixed(2);\n    }\n    if (castSpecies !== null) {\n      if (castWeight > species[castSpecies].heaviestCatch.weight) {\n        species[castSpecies].heaviestCatch.species = species[castSpecies].name;\n        species[castSpecies].heaviestCatch.weight = castWeight.toFixed(2);\n      }\n    }\n    if (castCatch) {\n      species[castSpecies].catches++;\n    }\n  }\n  devData.castHistory = devCasts;\n  devData.lakes = lakes;\n  devData.baits = baits;\n  devData.styles = styles;\n  devData.species = species;\n\n  return devData;\n}\n\nexport default DevData;\n","import React from \"react\";\nimport styles from \"./app.module.css\";\nimport Nav from \"./nav/Nav\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MainMenu from \"./mainMenu/MainMenu\";\nimport VariableManagement from \"./variableManagement/VaraibleManagement\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Stats from \"./stats/Stats\";\nimport Variable from \"./variable/Variable\";\nimport DevData from \"./DevData\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [],\n      baits: [],\n      styles: [],\n      species: [],\n      castHistory: [],\n      currentVariable: [\"lakes\", 0],\n    };\n  }\n  componentDidMount() {\n    /*let devState = DevData(100000);\n    console.log(devState);\n    this.setState({\n      lakes: devState.lakes,\n      baits: devState.baits,\n      styles: devState.styles,\n      species: devState.species,\n      castHistory: devState.castHistory,\n    });*/\n    if (localStorage.getItem(\"app-data\")) {\n      let appData = JSON.parse(localStorage.getItem(\"app-data\"));\n      console.log(appData);\n      this.setState({\n        lakes: appData.lakes,\n        baits: appData.baits,\n        styles: appData.styles,\n        species: appData.species,\n        castHistory: appData.castHistory,\n      });\n    }\n  }\n\n  addLake = (lakeName) => {\n    let newLakes = [...this.state.lakes];\n    let newLake = {\n      name: lakeName,\n      lakes: [\n        {\n          name: \"lake 1\",\n          duration: 0,\n          catches: 0,\n          heaviestCatch: { weight: 0, species: null },\n          castIndexes: [],\n        },\n      ],\n    };\n    newLakes.push(newLake);\n    this.setState({ lakes: newLakes }, () => {\n      localStorage.setItem(\"app-data\", JSON.stringify(this.state));\n    });\n  };\n\n  addBait = (baitName) => {\n    let newBaits = [...this.state.baits];\n    let newBait = {\n      name: baitName,\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      castIndexes: [],\n    };\n    newBaits.push(newBait);\n    this.setState({ baits: newBaits }, () => {\n      localStorage.setItem(\"app-data\", JSON.stringify(this.state));\n    });\n  };\n\n  addStyle = (styleName) => {\n    let newStyles = [...this.state.styles];\n    let newStyle = {\n      name: styleName,\n      duration: 0,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      castIndexes: [],\n    };\n    newStyles.push(newStyle);\n    this.setState({ styles: newStyles }, () => {\n      localStorage.setItem(\"app-data\", JSON.stringify(this.state));\n    });\n  };\n\n  addSpecies = (speciesName) => {\n    let NewSpecies = [...this.state.species];\n    let NewSpecie = {\n      name: speciesName,\n      catches: 0,\n      heaviestCatch: { weight: 0, species: null },\n      castIndexes: [],\n    };\n    NewSpecies.push(NewSpecie);\n    this.setState({ species: NewSpecies }, () => {\n      localStorage.setItem(\"app-data\", JSON.stringify(this.state));\n    });\n  };\n\n  editVarName = (property, index) => {\n    let newName = prompt(\"New name:\", `${this.state[property][index].name}`);\n    if (newName) {\n      let editedVariables = [...this.state[property]];\n      editedVariables[index].name = newName;\n      this.setState({ [property]: editedVariables }, () => {\n        localStorage.setItem(\"app-data\", JSON.stringify(this.state));\n      });\n    }\n  };\n\n  deleteVar = (property, index) => {\n    alert(`${property} + ${index}`);\n    let updatedVariables = [...this.state[property]];\n    updatedVariables[index] = null;\n    this.setState({ [property]: updatedVariables }, () => {\n      localStorage.setItem(\"app-data\", JSON.stringify(this.state));\n    });\n  };\n\n  setCurrentVariable = (filter, index) => {\n    this.setState({\n      currentVariable: { variableType: filter, variableIndex: index },\n    });\n  };\n\n  nextVar = () => {\n    let newCurrentVariable = this.state.currentVariable;\n    newCurrentVariable.variableIndex ===\n    this.state[newCurrentVariable.variableType].length - 1\n      ? (newCurrentVariable.variableIndex = 0)\n      : newCurrentVariable.variableIndex++;\n    this.setState({ currentVariable: newCurrentVariable });\n  };\n\n  prevVar = () => {\n    let newCurrentVariable = this.state.currentVariable;\n    newCurrentVariable.variableIndex === 0\n      ? (newCurrentVariable.variableIndex =\n          this.state[newCurrentVariable.variableType].length - 1)\n      : newCurrentVariable.variableIndex--;\n    this.setState({ currentVariable: newCurrentVariable });\n  };\n\n  mSToReadable = (milliseconds) => {\n    let seconds = (milliseconds / 1000) % 60;\n    let secondsNoDecimal = seconds.toFixed();\n    let minutes = ((milliseconds / 1000 - seconds) / 60) % 60;\n    let hours = ((milliseconds / 1000 - seconds) / 60 - minutes) / 60;\n\n    return `${hours < 10 ? `0${hours}` : hours}:${\n      minutes < 10 ? `0${minutes}` : minutes\n    }:${secondsNoDecimal < 10 ? `0${secondsNoDecimal}` : secondsNoDecimal}`;\n  };\n\n  mSToDate = (milliseconds) => {\n    let date = new Date();\n    date.setTime(milliseconds);\n    return date;\n  };\n\n  mSToHours = (milliseconds) => {\n    let hours = (milliseconds / 3600000).toFixed();\n    return hours < 1 ? \"less than 1 hour\" : `${hours} hours`;\n  };\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <Router>\n          <Nav></Nav>\n          <Switch>\n            <Route\n              path=\"/fishv3/\"\n              exact\n              render={(props) => (\n                <MainMenu\n                  lakes={this.state.lakes}\n                  addLake={this.addLake}\n                  setCurrentVariable={this.setCurrentVariable}\n                  mSToReadable={this.mSToReadable}\n                ></MainMenu>\n              )}\n            ></Route>\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/fishv3/manage\"\n              render={(props) => (\n                <VariableManagement\n                  lakes={this.state.lakes}\n                  baits={this.state.baits}\n                  styles={this.state.styles}\n                  species={this.state.species}\n                  addLake={this.addLake}\n                  addBait={this.addBait}\n                  addStyle={this.addStyle}\n                  addSpecies={this.addSpecies}\n                  setCurrentVariable={this.setCurrentVariable}\n                  editVarName={this.editVarName}\n                  deleteVariable={this.deleteVar}\n                  mSToReadable={this.mSToReadable}\n                ></VariableManagement>\n              )}\n            ></Route>\n          </Switch>\n\n          <Switch>\n            <Route\n              path=\"/fishv3/stats\"\n              render={(props) => (\n                <Stats\n                  lakes={this.state.lakes}\n                  baits={this.state.baits}\n                  styles={this.state.styles}\n                  species={this.state.species}\n                  castHistory={this.state.castHistory}\n                ></Stats>\n              )}\n            ></Route>\n          </Switch>\n\n          <Switch>\n            <Route\n              path=\"/fishv3/variable\"\n              render={(props) => (\n                <Variable\n                  lakes={this.state.lakes}\n                  baits={this.state.baits}\n                  styles={this.state.styles}\n                  species={this.state.species}\n                  castHistory={this.state.castHistory}\n                  variable={this.state.currentVariable}\n                  nextVar={this.nextVar}\n                  prevVar={this.prevVar}\n                  mSToReadable={this.mSToReadable}\n                  mSToDate={this.mSToDate}\n                  mSToHours={this.mSToHours}\n                ></Variable>\n              )}\n            ></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}