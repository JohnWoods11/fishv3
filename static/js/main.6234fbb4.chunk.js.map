{"version":3,"sources":["mainMenu/lakeStats.module.css","mainMenu/sessionDash.module.css","variableManagement/variableManager.module.css","variableManagement/variableManagement.module.css","mainMenu/lakeAccordion.module.css","mainMenu/extraLakeStats.module.css","variable/variable.module.css","nav/nav.module.css","stats/stats.module.css","app.module.css","nav/Nav.js","mainMenu/LakeAccordion.js","mainMenu/LakeStats.js","mainMenu/SessionDash.js","mainMenu/ExtraLakeStats.js","mainMenu/MainMenu.js","variableManagement/VariableManager.js","variableManagement/VaraibleManagement.js","stats/Stats.js","variable/Variable.js","DevData.js","App.js","serviceWorker.js","index.js","mainMenu/mainMenu.module.css"],"names":["module","exports","Nav","props","className","styles","navContainer","logo","to","LakeAccordion","container","Accordion","accordian","lakes","map","lake","index","Card","style","backgroundColor","currentIndex","color","onClick","selectLake","lakeItem","name","newLakeName","prompt","addLake","LakeStats","lakeIndex","lakeInfoContainer","infoHeader","infoBody","castIndexes","length","timeData","isFullScreen","buttonContainer","Button","button","variant","fishLake","SessionDash","currentSession","lakeName","resetIsFishing","ExtraLakeStats","MainMenu","useState","lakeSelected","setLakeSelected","isFishing","setIsFishing","dashIsFullScreen","setDashIsFullScreen","menuContainer","fullScreenSessionDash","sessionDashboard","fullScreenFishingDash","fishingDashboard","lakeAccordion","lakeStats","extraStats","dashboardExtender","optionButtons","buttonInfoContainer","buttonInfoHeader","buttonInfo","VariableManager","toVariable","setToVariable","variables","variable","Toggle","as","Header","eventKey","variableHeader","setCurrentVariable","goToVar","buttons","event","editVarName","stopPropagation","deleteVar","deleteVariable","newVariable","addVariable","VariableManagement","filter","setFilter","variableIndex","managementInfo","ButtonGroup","variableSelectors","baits","addBait","addStyle","species","addSpecies","addLakes","block","Stats","header","Variable","cast","castIndex","castHistory","bait","DevData","castsWanted","console","log","devData","devCasts","getRandomInt","max","Math","floor","random","i","castLake","castBait","castStyle","castSpecies","push","App","newLakes","state","newLake","setState","baitName","newBaits","newBait","styleName","newStyles","newStyle","speciesName","NewSpecies","NewSpecie","property","newName","editedVariables","alert","currentVariable","devState","this","app","path","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6234fbb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeStats_container__3WcWD\",\"button\":\"lakeStats_button__D8avZ\",\"lakeInfoContainer\":\"lakeStats_lakeInfoContainer__Gvd9x\",\"infoHeader\":\"lakeStats_infoHeader__3obKq\",\"infoBody\":\"lakeStats_infoBody__kMOQ9\",\"timeData\":\"lakeStats_timeData__31wxm\",\"buttonContainer\":\"lakeStats_buttonContainer__Yv6mk\",\"buttonContainerFullScreen\":\"lakeStats_buttonContainerFullScreen__1wBHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sessionDash_container__2oq5U\",\"buttonContainer\":\"sessionDash_buttonContainer__1pNzQ\",\"button\":\"sessionDash_button__li4O_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"variableManager_container__2rlTw\",\"card\":\"variableManager_card__178uL\",\"variableHeader\":\"variableManager_variableHeader__qL6EA\",\"variableBody\":\"variableManager_variableBody__1C7Zg\",\"buttons\":\"variableManager_buttons__SuBT1\",\"button\":\"variableManager_button__10S6n\",\"variable\":\"variableManager_variable__3fGX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoHeader\":\"variableManagement_infoHeader__1w-wh\",\"infoBody\":\"variableManagement_infoBody__1yTVH\",\"variableSelectors\":\"variableManagement_variableSelectors__2-L3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeAccordion_container__2swJ5\",\"lakeItem\":\"lakeAccordion_lakeItem__3MmoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"extraLakeStats_container__3Q667\",\"buttonContainer\":\"extraLakeStats_buttonContainer__1b93u\",\"button\":\"extraLakeStats_button__2vl7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variableHeader\":\"variable_variableHeader__2pAym\",\"cast\":\"variable_cast__3EGKJ\",\"variable\":\"variable_variable__1IeH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"nav_navContainer__2VmMG\",\"logo\":\"nav_logo__YKx8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"stats_header__5ozD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3IZMC\"};","import React from \"react\";\r\nimport styles from \"./nav.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <div className={styles.navContainer}>\r\n      <Link className={styles.logo} to=\"/fishv3/\">\r\n        Fincounter\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport styles from \"./lakeAccordion.module.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction LakeAccordion(props) {\r\n  const addLake = () => {\r\n    let newLakeName = prompt(\"Enter the new lakes name:\");\r\n    if (newLakeName) {\r\n      props.addLake(newLakeName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Accordion className={styles.accordian}>\r\n        {props.lakes.map((lake, index) => (\r\n          <Card\r\n            style={{\r\n              backgroundColor:\r\n                index === props.currentIndex ? \"rgb(0,123,255)\" : \"white\",\r\n              color: index === props.currentIndex ? \"white\" : \"black\",\r\n            }}\r\n            onClick={() => {\r\n              props.selectLake(index);\r\n            }}\r\n            className={styles.lakeItem}\r\n          >\r\n            {lake.name}\r\n          </Card>\r\n        ))}\r\n        <Card className={styles.lakeItem} onClick={addLake}>\r\n          New Lake\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LakeAccordion;\r\n","import React from \"react\";\r\nimport styles from \"./lakeStats.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction LakeStats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      {props.lakeIndex === null ? (\r\n        <div>Select a lake to fish</div>\r\n      ) : (\r\n        <div className={styles.container}>\r\n          {\" \"}\r\n          <div className={styles.lakeInfoContainer}>\r\n            <div className={styles.infoHeader}>\r\n              {props.lakes[props.lakeIndex].name}\r\n            </div>\r\n            <div className={styles.infoBody}>Catches: </div>\r\n            <div className={styles.infoBody}>\r\n              Casts: {props.lakes[props.lakeIndex].lakes[0].castIndexes.length}\r\n            </div>\r\n            <div className={styles.infoBody}>Time Fished: </div>\r\n            <div className={styles.infoBody}>Biggest Catch: </div>\r\n            <div className={styles.timeData}>to do</div>\r\n          </div>\r\n          {props.isFullScreen ? null : (\r\n            <div className={styles.buttonContainer}>\r\n              {\" \"}\r\n              <Button className={styles.button} variant=\"info\">\r\n                Lake\r\n              </Button>\r\n              <Button\r\n                className={styles.button}\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  props.fishLake();\r\n                }}\r\n              >\r\n                Fish\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LakeStats;\r\n","import React from \"react\";\r\nimport styles from \"./sessionDash.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction SessionDash(props) {\r\n  return props.currentSession ? (\r\n    <div className={styles.container}>{props.lakes[props.lakeIndex].name}</div>\r\n  ) : (\r\n    <div className={styles.container}>\r\n      <div className={styles.lakeName}>{props.lakes[props.lakeIndex].name}</div>\r\n      <div>best bait style etc here</div>\r\n      <div>store coordinates of lake</div>\r\n      <div>look up temps</div>\r\n      <div className={styles.buttonContainer}>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className={styles.button}\r\n          onClick={props.resetIsFishing}\r\n        >\r\n          back\r\n        </Button>\r\n        <Button variant=\"success\" className={styles.button}>\r\n          Start session\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionDash;\r\n","import React from \"react\";\r\nimport styles from \"./extraLakeStats.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction ExtraLakeStats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>More stats</div>\r\n      {props.lakeIndex !== null ? (\r\n        <div className={styles.buttonContainer}>\r\n          <Button className={styles.button} variant=\"info\">\r\n            Lake\r\n          </Button>\r\n          <Button\r\n            className={styles.button}\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              props.fishLake();\r\n            }}\r\n          >\r\n            Fish\r\n          </Button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExtraLakeStats;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./mainMenu.module.css\";\r\nimport LakeAccordion from \"./LakeAccordion\";\r\nimport LakeStats from \"./LakeStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SessionDash from \"./SessionDash\";\r\nimport ExtraLakeStats from \"./ExtraLakeStats\";\r\n\r\nfunction MainMenu(props) {\r\n  const [lakeSelected, setLakeSelected] = useState(null);\r\n  const [isFishing, setIsFishing] = useState(false);\r\n  const [dashIsFullScreen, setDashIsFullScreen] = useState(false);\r\n\r\n  const fishLake = (index) => {\r\n    setIsFishing(true);\r\n  };\r\n\r\n  const resetIsFishing = () => {\r\n    setIsFishing(false);\r\n    setLakeSelected(null);\r\n  };\r\n\r\n  const selectLake = (index) => {\r\n    setLakeSelected(index);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuContainer}>\r\n      {\" \"}\r\n      {isFishing ? (\r\n        <div\r\n          className={\r\n            dashIsFullScreen\r\n              ? styles.fullScreenSessionDash\r\n              : styles.sessionDashboard\r\n          }\r\n        >\r\n          <SessionDash\r\n            isFullScreen={dashIsFullScreen}\r\n            lakes={props.lakes}\r\n            lakeIndex={lakeSelected}\r\n            resetIsFishing={resetIsFishing}\r\n          ></SessionDash>{\" \"}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            dashIsFullScreen\r\n              ? styles.fullScreenFishingDash\r\n              : styles.fishingDashboard\r\n          }\r\n        >\r\n          <LakeAccordion\r\n            className={styles.lakeAccordion}\r\n            lakes={props.lakes}\r\n            selectLake={selectLake}\r\n            currentIndex={lakeSelected}\r\n            addLake={props.addLake}\r\n          ></LakeAccordion>\r\n          <LakeStats\r\n            className={styles.lakeStats}\r\n            isFullScreen={dashIsFullScreen}\r\n            lakes={props.lakes}\r\n            lakeIndex={lakeSelected}\r\n            fishLake={fishLake}\r\n          ></LakeStats>\r\n        </div>\r\n      )}\r\n      {dashIsFullScreen && !isFishing ? (\r\n        <div className={styles.extraStats}>\r\n          <ExtraLakeStats\r\n            lakeIndex={lakeSelected}\r\n            fishLake={fishLake}\r\n          ></ExtraLakeStats>\r\n        </div>\r\n      ) : null}\r\n      <div\r\n        className={styles.dashboardExtender}\r\n        onClick={() => setDashIsFullScreen(!dashIsFullScreen)}\r\n      ></div>\r\n      {!dashIsFullScreen ? (\r\n        <div className={styles.optionButtons}>\r\n          <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonInfoContainer}>\r\n              <div className={styles.buttonInfoHeader}>Manage variables</div>\r\n              <div className={styles.buttonInfo}>\r\n                look up, edit and create new lakes/baits..\r\n              </div>\r\n            </div>\r\n            <Link to=\"/fishv3/manage\">\r\n              <Button className={styles.button}> </Button>\r\n            </Link>\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonInfoContainer}>\r\n              <div className={styles.buttonInfoHeader}>Stats</div>\r\n              <div className={styles.buttonInfo}>\r\n                use stats to find the best variables for your session\r\n              </div>\r\n            </div>\r\n            <Link to=\"/fishv3/stats\">\r\n              <Button className={styles.button}> </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./variableManager.module.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction VariableManager(props) {\r\n  const [toVariable, setToVariable] = useState(false);\r\n\r\n  const addVariable = () => {\r\n    let newVariable = prompt(\"New variable:\");\r\n    if (newVariable) {\r\n      props.addVariable(newVariable);\r\n    }\r\n  };\r\n\r\n  const goToVar = (variable) => {\r\n    props.setCurrentVariable(variable);\r\n    setToVariable(true);\r\n  };\r\n\r\n  const editVarName = (event, index) => {\r\n    props.editVarName(index);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const deleteVariable = (event) => {\r\n    props.deleteVar();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  return toVariable ? (\r\n    <Redirect to=\"/fishv3/variable\"> </Redirect>\r\n  ) : (\r\n    <div className={styles.container}>\r\n      <Accordion>\r\n        {props.variables.map((variable, index) => (\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n              <div\r\n                className={styles.variableHeader}\r\n                onClick={() => {\r\n                  goToVar(variable);\r\n                }}\r\n              >\r\n                <div>{variable.name}</div>\r\n                <div className={styles.buttons}>\r\n                  <Button\r\n                    className={styles.button}\r\n                    variant=\"secondary\"\r\n                    onClick={(event) => {\r\n                      editVarName(event, index);\r\n                    }}\r\n                  >\r\n                    <div>&#9998;</div>\r\n                  </Button>\r\n\r\n                  <Button\r\n                    className={styles.button}\r\n                    variant=\"danger\"\r\n                    onClick={(event) => {\r\n                      deleteVariable(event);\r\n                    }}\r\n                  >\r\n                    &#10006;\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Accordion.Toggle>\r\n          </Card>\r\n        ))}\r\n        <Accordion.Toggle\r\n          as={Card.Header}\r\n          style={{ backgroundColor: \"lightGray\" }}\r\n          eventKey=\"0\"\r\n        >\r\n          <div\r\n            className={styles.variableHeader}\r\n            onClick={() => {\r\n              addVariable();\r\n            }}\r\n          >\r\n            Add variable\r\n          </div>\r\n        </Accordion.Toggle>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariableManager;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./variableManagement.module.css\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport VariableManager from \"./VariableManager\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction VariableManagement(props) {\r\n  const [filter, setFilter] = useState(\"lakes\");\r\n\r\n  const editVarName = (variableIndex) => {\r\n    props.editVarName(filter, variableIndex);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.managementInfo}>\r\n        <div className={styles.infoHeader}>Variable Management</div>\r\n        <div className={styles.infoBody}>\r\n          you keep the casts when deleting variables\r\n        </div>\r\n      </div>\r\n      <ButtonGroup className={styles.variableSelectors}>\r\n        <Button\r\n          variant={filter === \"lakes\" ? \"success\" : \"primary\"}\r\n          onClick={() => {\r\n            setFilter(\"lakes\");\r\n          }}\r\n        >\r\n          Lakes\r\n        </Button>\r\n        <Button\r\n          variant={filter === \"baits\" ? \"success\" : \"primary\"}\r\n          onClick={() => {\r\n            setFilter(\"baits\");\r\n          }}\r\n        >\r\n          Baits\r\n        </Button>\r\n        <Button\r\n          variant={filter === \"styles\" ? \"success\" : \"primary\"}\r\n          onClick={() => {\r\n            setFilter(\"styles\");\r\n          }}\r\n        >\r\n          Styles\r\n        </Button>\r\n        <Button\r\n          variant={filter === \"species\" ? \"success\" : \"primary\"}\r\n          onClick={() => {\r\n            setFilter(\"species\");\r\n          }}\r\n        >\r\n          Species\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      {filter === \"baits\" ? (\r\n        <VariableManager\r\n          variables={props.baits}\r\n          addVariable={props.addBait}\r\n          setCurrentVariable={props.setCurrentVariable}\r\n          editVarName={editVarName}\r\n          deleteVar={props.deleteVar}\r\n        ></VariableManager>\r\n      ) : filter === \"styles\" ? (\r\n        <VariableManager\r\n          variables={props.styles}\r\n          addVariable={props.addStyle}\r\n          setCurrentVariable={props.setCurrentVariable}\r\n          editVarName={editVarName}\r\n          deleteVar={props.deleteVar}\r\n        ></VariableManager>\r\n      ) : filter === \"species\" ? (\r\n        <VariableManager\r\n          variables={props.species}\r\n          addVariable={props.addSpecies}\r\n          setCurrentVariable={props.setCurrentVariable}\r\n          editVarName={editVarName}\r\n          deleteVar={props.deleteVar}\r\n        ></VariableManager>\r\n      ) : (\r\n        <VariableManager\r\n          variables={props.lakes}\r\n          addVariable={props.addLakes}\r\n          setCurrentVariable={props.setCurrentVariable}\r\n          editVarName={editVarName}\r\n          deleteVar={props.deleteVar}\r\n        ></VariableManager>\r\n      )}\r\n\r\n      <Link to=\"/fishv3/\">\r\n        <Button variant=\"primary\" block>\r\n          back\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariableManagement;\r\n","import React from \"react\";\r\nimport styles from \"./stats.module.css\";\r\n\r\nfunction Stats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>{\"Stats & Tools\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport styles from \"./variable.module.css\";\r\n\r\nfunction Variable(props) {\r\n  return props.variable.lakes ? (\r\n    <div>\r\n      <div className={styles.variableHeader}>{props.variable.name}</div>\r\n      <div className={styles.cast}>\r\n        <div className={styles.variableHeader}>Lake</div>\r\n        <div className={styles.variableHeader}>Bait </div>\r\n        <div className={styles.variableHeader}>Style </div>\r\n        <div className={styles.variableHeader}>Species </div>\r\n      </div>\r\n      {props.variable.lakes[0].castIndexes.map((castIndex, index) => (\r\n        <div className={styles.cast}>\r\n          <div className={styles.variable}>\r\n            {props.lakes[props.castHistory[castIndex].lake].name}\r\n          </div>\r\n          <div className={styles.variable}>\r\n            {props.baits[props.castHistory[castIndex].bait].name}\r\n          </div>\r\n          <div className={styles.variable}>\r\n            {props.styles[props.castHistory[castIndex].style].name}\r\n          </div>\r\n          <div className={styles.variable}>\r\n            {props.species[props.castHistory[castIndex].species].name}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <div className={styles.variableHeader}>{props.variable.name}</div>\r\n      <div className={styles.cast}>\r\n        <div className={styles.variableHeader}>Lake</div>\r\n        <div className={styles.variableHeader}>Bait </div>\r\n        <div className={styles.variableHeader}>Style </div>\r\n        <div className={styles.variableHeader}>Species </div>\r\n      </div>\r\n      {props.variable.castIndexes.map((castIndex, index) => (\r\n        <div className={styles.cast}>\r\n          <div className={styles.variable}>\r\n            {props.lakes[props.castHistory[castIndex].lake].name}\r\n          </div>\r\n          <div className={styles.variable}>\r\n            {props.baits[props.castHistory[castIndex].bait].name}\r\n          </div>\r\n          <div className={styles.variable}>\r\n            {props.styles[props.castHistory[castIndex].style].name}\r\n          </div>\r\n          <div className={styles.variable}>\r\n            {props.species[props.castHistory[castIndex].species].name}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Variable;\r\n","function DevData(castsWanted) {\r\n  console.log(\"hello world\");\r\n  let devData = {};\r\n  let lakes = [\r\n    { name: \"Holton\", lakes: [{ name: \"Holton\", castIndexes: [] }] },\r\n    { name: \"Alderby\", lakes: [{ name: \"Alderby\", castIndexes: [] }] },\r\n    { name: \"Henstead\", lakes: [{ name: \"Henstead\", castIndexes: [] }] },\r\n    { name: \"Wisset\", lakes: [{ name: \"Wisset\", castIndexes: [] }] },\r\n  ];\r\n  let species = [\r\n    { name: \"Carp\", castIndexes: [] },\r\n    { name: \"Roach\", castIndexes: [] },\r\n    { name: \"Pike\", castIndexes: [] },\r\n    { name: \"Perch\", castIndexes: [] },\r\n  ];\r\n  let baits = [\r\n    { name: \"Sweetcorn\", castIndexes: [] },\r\n    { name: \"Maggots\", castIndexes: [] },\r\n    { name: \"Bread\", castIndexes: [] },\r\n    { name: \"Lure\", castIndexes: [] },\r\n  ];\r\n  let styles = [\r\n    {\r\n      name: \"Float\",\r\n      castIndexes: [],\r\n    },\r\n    {\r\n      name: \"Ledger\",\r\n      castIndexes: [],\r\n    },\r\n    {\r\n      name: \"Spin\",\r\n      castIndexes: [],\r\n    },\r\n    {\r\n      name: \"Feeder\",\r\n      castIndexes: [],\r\n    },\r\n  ];\r\n  let devCasts = [];\r\n\r\n  let getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  };\r\n\r\n  for (let i = 0; i < castsWanted; i++) {\r\n    let castLake = getRandomInt(lakes.length);\r\n    let castBait = getRandomInt(baits.length);\r\n    let castStyle = getRandomInt(styles.length);\r\n    let castSpecies = getRandomInt(species.length);\r\n    devCasts.push({\r\n      lake: castLake,\r\n      bait: castBait,\r\n      style: castStyle,\r\n      species: castSpecies,\r\n    });\r\n\r\n    lakes[castLake].lakes[0].castIndexes.push(i);\r\n    baits[castBait].castIndexes.push(i);\r\n    styles[castStyle].castIndexes.push(i);\r\n    species[castSpecies].castIndexes.push(i);\r\n  }\r\n  devData.castHistory = devCasts;\r\n  devData.lakes = lakes;\r\n  devData.baits = baits;\r\n  devData.styles = styles;\r\n  devData.species = species;\r\n\r\n  return devData;\r\n}\r\n\r\nexport default DevData;\r\n","import React from \"react\";\nimport styles from \"./app.module.css\";\nimport Nav from \"./nav/Nav\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MainMenu from \"./mainMenu/MainMenu\";\nimport VariableManagement from \"./variableManagement/VaraibleManagement\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Stats from \"./stats/Stats\";\nimport Variable from \"./variable/Variable\";\nimport DevData from \"./DevData\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [],\n      baits: [],\n      styles: [],\n      species: [],\n      castHistory: [],\n      currentVariable: [],\n    };\n  }\n  componentDidMount() {\n    let devState = DevData(100);\n    this.setState({\n      lakes: devState.lakes,\n      baits: devState.baits,\n      styles: devState.styles,\n      species: devState.species,\n      castHistory: devState.castHistory,\n    });\n  }\n\n  addLake = (lakeName) => {\n    let newLakes = [...this.state.lakes];\n    let newLake = {\n      name: lakeName,\n      lakes: [{ name: lakeName, castIndexes: [] }],\n    };\n    newLakes.push(newLake);\n    this.setState({ lakes: newLakes });\n  };\n\n  addBait = (baitName) => {\n    let newBaits = [...this.state.baits];\n    let newBait = { name: baitName, castIndexes: [] };\n    newBaits.push(newBait);\n    this.setState({ baits: newBaits });\n  };\n\n  addStyle = (styleName) => {\n    let newStyles = [...this.state.styles];\n    let newStyle = { name: styleName, castIndexes: [] };\n    newStyles.push(newStyle);\n    this.setState({ styles: newStyles });\n  };\n\n  addSpecies = (speciesName) => {\n    let NewSpecies = [...this.state.species];\n    let NewSpecie = { name: speciesName, castIndexes: [] };\n    NewSpecies.push(NewSpecie);\n    this.setState({ species: NewSpecies });\n  };\n\n  editVarName = (property, index) => {\n    let newName = prompt(\"New name:\", `${this.state[property][index].name}`);\n    if (newName) {\n      let editedVariables = [...this.state[property]];\n      editedVariables[index].name = newName;\n      this.setState({ [property]: editedVariables });\n    }\n  };\n\n  deleteVar = (property, index) => {\n    alert(\"no work!\");\n  };\n\n  setCurrentVariable = (variable) => {\n    this.setState({ currentVariable: variable });\n  };\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <Router>\n          <Nav></Nav>\n          <Switch>\n            <Route\n              path=\"/fishv3/\"\n              exact\n              render={(props) => (\n                <MainMenu\n                  lakes={this.state.lakes}\n                  addLake={this.addLake}\n                  setCurrentVariable={this.setCurrentVariable}\n                ></MainMenu>\n              )}\n            ></Route>\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/fishv3/manage\"\n              render={(props) => (\n                <VariableManagement\n                  lakes={this.state.lakes}\n                  baits={this.state.baits}\n                  styles={this.state.styles}\n                  species={this.state.species}\n                  addLake={this.addLake}\n                  addBait={this.addBait}\n                  addStyle={this.addStyle}\n                  addSpecies={this.addSpecies}\n                  setCurrentVariable={this.setCurrentVariable}\n                  editVarName={this.editVarName}\n                  deleteVar={this.deleteVar}\n                ></VariableManagement>\n              )}\n            ></Route>\n          </Switch>\n\n          <Switch>\n            <Route\n              path=\"/fishv3/stats\"\n              render={(props) => <Stats></Stats>}\n            ></Route>\n          </Switch>\n\n          <Switch>\n            <Route\n              path=\"/fishv3/variable\"\n              render={(props) => (\n                <Variable\n                  lakes={this.state.lakes}\n                  baits={this.state.baits}\n                  styles={this.state.styles}\n                  species={this.state.species}\n                  castHistory={this.state.castHistory}\n                  variable={this.state.currentVariable}\n                ></Variable>\n              )}\n            ></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"mainMenu_menuContainer__yFvJS\",\"fishingDashboard\":\"mainMenu_fishingDashboard__2BceL\",\"fullScreenFishingDash\":\"mainMenu_fullScreenFishingDash__1u1nb\",\"sessionDashboard\":\"mainMenu_sessionDashboard__1l3eJ\",\"fullScreenSessionDash\":\"mainMenu_fullScreenSessionDash__5oW4B\",\"extraStats\":\"mainMenu_extraStats__3w3f6\",\"dashboardExtender\":\"mainMenu_dashboardExtender__3InqX\",\"optionButtons\":\"mainMenu_optionButtons__1_ptS\",\"buttonContainer\":\"mainMenu_buttonContainer__1Nt4W\",\"buttonInfoHeader\":\"mainMenu_buttonInfoHeader__1fsiR\",\"buttonInfo\":\"mainMenu_buttonInfo__1DqPi\",\"buttonInfoContainer\":\"mainMenu_buttonInfoContainer__38ymi\",\"button\":\"mainMenu_button__3viG9\"};"],"sourceRoot":""}