{"version":3,"sources":["mainMenu/sessionDash.module.css","variableManagement/variableManagement.module.css","mainMenu/lakeAccordion.module.css","mainMenu/extraLakeStats.module.css","nav/nav.module.css","stats/stats.module.css","app.module.css","mainMenu/mainMenu.module.css","nav/Nav.js","mainMenu/LakeAccordion.js","mainMenu/LakeStats.js","mainMenu/SessionDash.js","mainMenu/ExtraLakeStats.js","mainMenu/MainMenu.js","variableManagement/VariableManager.js","variableManagement/VaraibleManagement.js","stats/Stats.js","DevData.js","App.js","serviceWorker.js","index.js","mainMenu/lakeStats.module.css"],"names":["module","exports","Nav","props","className","styles","navContainer","logo","to","LakeAccordion","container","Accordion","accordian","lakes","map","lake","index","Card","style","backgroundColor","currentIndex","color","onClick","selectLake","lakeItem","name","prompt","LakeStats","lakeIndex","lakeInfoContainer","infoHeader","infoBody","castIndexes","length","timeData","isFullScreen","buttonContainer","Button","button","variant","fishLake","SessionDash","currentSession","lakeName","resetIsFishing","ExtraLakeStats","MainMenu","useState","lakeSelected","setLakeSelected","isFishing","setIsFishing","dashIsFullScreen","setDashIsFullScreen","menuContainer","fullScreenSessionDash","sessionDashboard","fullScreenFishingDash","fishingDashboard","lakeAccordion","lakeStats","extraStats","dashboardExtender","optionButtons","buttonInfoContainer","buttonInfoHeader","buttonInfo","VariableManager","VariableManagement","managementInfo","ButtonGroup","variableSelectors","Stats","header","DevData","castsWanted","console","log","devData","species","baits","devCasts","getRandomInt","max","Math","floor","random","i","castLake","castBait","castStyle","castSpecies","push","bait","castHistory","App","state","devState","this","setState","app","path","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.543f5a1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sessionDash_container__2oq5U\",\"buttonContainer\":\"sessionDash_buttonContainer__1pNzQ\",\"button\":\"sessionDash_button__li4O_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoHeader\":\"variableManagement_infoHeader__1w-wh\",\"infoBody\":\"variableManagement_infoBody__1yTVH\",\"variableSelectors\":\"variableManagement_variableSelectors__2-L3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeAccordion_container__2swJ5\",\"lakeItem\":\"lakeAccordion_lakeItem__3MmoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"extraLakeStats_container__3Q667\",\"buttonContainer\":\"extraLakeStats_buttonContainer__1b93u\",\"button\":\"extraLakeStats_button__2vl7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"nav_navContainer__2VmMG\",\"logo\":\"nav_logo__YKx8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"stats_header__5ozD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3IZMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"mainMenu_menuContainer__yFvJS\",\"fishingDashboard\":\"mainMenu_fishingDashboard__2BceL\",\"fullScreenFishingDash\":\"mainMenu_fullScreenFishingDash__1u1nb\",\"sessionDashboard\":\"mainMenu_sessionDashboard__1l3eJ\",\"fullScreenSessionDash\":\"mainMenu_fullScreenSessionDash__5oW4B\",\"extraStats\":\"mainMenu_extraStats__3w3f6\",\"dashboardExtender\":\"mainMenu_dashboardExtender__3InqX\",\"optionButtons\":\"mainMenu_optionButtons__1_ptS\",\"buttonContainer\":\"mainMenu_buttonContainer__1Nt4W\",\"buttonInfoHeader\":\"mainMenu_buttonInfoHeader__1fsiR\",\"buttonInfo\":\"mainMenu_buttonInfo__1DqPi\",\"buttonInfoContainer\":\"mainMenu_buttonInfoContainer__38ymi\",\"button\":\"mainMenu_button__3viG9\"};","import React from \"react\";\r\nimport styles from \"./nav.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <div className={styles.navContainer}>\r\n      <Link className={styles.logo} to=\"/fishv3/\">\r\n        Fincounter\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport styles from \"./lakeAccordion.module.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction LakeAccordion(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Accordion className={styles.accordian}>\r\n        {props.lakes.map((lake, index) => (\r\n          <Card\r\n            style={{\r\n              backgroundColor:\r\n                index === props.currentIndex ? \"rgb(0,123,255)\" : \"white\",\r\n              color: index === props.currentIndex ? \"white\" : \"black\",\r\n            }}\r\n            onClick={() => {\r\n              props.selectLake(index);\r\n            }}\r\n            className={styles.lakeItem}\r\n          >\r\n            {lake.name}\r\n          </Card>\r\n        ))}\r\n        <Card\r\n          className={styles.lakeItem}\r\n          onClick={() => prompt(\"Enter the new lakes name:\")}\r\n        >\r\n          New Lake\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LakeAccordion;\r\n","import React from \"react\";\r\nimport styles from \"./lakeStats.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction LakeStats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      {props.lakeIndex === null ? (\r\n        <div>Select a lake to fish</div>\r\n      ) : (\r\n        <div className={styles.container}>\r\n          {\" \"}\r\n          <div className={styles.lakeInfoContainer}>\r\n            <div className={styles.infoHeader}>\r\n              {props.lakes[props.lakeIndex].name}\r\n            </div>\r\n            <div className={styles.infoBody}>Catches: </div>\r\n            <div className={styles.infoBody}>\r\n              Casts: {props.lakes[props.lakeIndex].lakes[0].castIndexes.length}\r\n            </div>\r\n            <div className={styles.infoBody}>Time Fished: </div>\r\n            <div className={styles.infoBody}>Biggest Catch: </div>\r\n            <div className={styles.timeData}>to do</div>\r\n          </div>\r\n          {props.isFullScreen ? null : (\r\n            <div className={styles.buttonContainer}>\r\n              {\" \"}\r\n              <Button className={styles.button} variant=\"info\">\r\n                Lake\r\n              </Button>\r\n              <Button\r\n                className={styles.button}\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  props.fishLake();\r\n                }}\r\n              >\r\n                Fish\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LakeStats;\r\n","import React from \"react\";\r\nimport styles from \"./sessionDash.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction SessionDash(props) {\r\n  return props.currentSession ? (\r\n    <div className={styles.container}>{props.lakes[props.lakeIndex].name}</div>\r\n  ) : (\r\n    <div className={styles.container}>\r\n      <div className={styles.lakeName}>{props.lakes[props.lakeIndex].name}</div>\r\n      <div>best bait style etc here</div>\r\n      <div>store coordinates of lake</div>\r\n      <div>look up temps</div>\r\n      <div className={styles.buttonContainer}>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className={styles.button}\r\n          onClick={props.resetIsFishing}\r\n        >\r\n          back\r\n        </Button>\r\n        <Button variant=\"success\" className={styles.button}>\r\n          Start session\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionDash;\r\n","import React from \"react\";\r\nimport styles from \"./extraLakeStats.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction ExtraLakeStats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>More stats</div>\r\n      {props.lakeIndex !== null ? (\r\n        <div className={styles.buttonContainer}>\r\n          <Button className={styles.button} variant=\"info\">\r\n            Lake\r\n          </Button>\r\n          <Button\r\n            className={styles.button}\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              props.fishLake();\r\n            }}\r\n          >\r\n            Fish\r\n          </Button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExtraLakeStats;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./mainMenu.module.css\";\r\nimport LakeAccordion from \"./LakeAccordion\";\r\nimport LakeStats from \"./LakeStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SessionDash from \"./SessionDash\";\r\nimport ExtraLakeStats from \"./ExtraLakeStats\";\r\n\r\nfunction MainMenu(props) {\r\n  const [lakeSelected, setLakeSelected] = useState(null);\r\n  const [isFishing, setIsFishing] = useState(false);\r\n  const [dashIsFullScreen, setDashIsFullScreen] = useState(false);\r\n\r\n  const fishLake = (index) => {\r\n    setIsFishing(true);\r\n  };\r\n\r\n  const resetIsFishing = () => {\r\n    setIsFishing(false);\r\n    setLakeSelected(null);\r\n  };\r\n\r\n  const selectLake = (index) => {\r\n    setLakeSelected(index);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuContainer}>\r\n      {\" \"}\r\n      {isFishing ? (\r\n        <div\r\n          className={\r\n            dashIsFullScreen\r\n              ? styles.fullScreenSessionDash\r\n              : styles.sessionDashboard\r\n          }\r\n        >\r\n          <SessionDash\r\n            isFullScreen={dashIsFullScreen}\r\n            lakes={props.lakes}\r\n            lakeIndex={lakeSelected}\r\n            resetIsFishing={resetIsFishing}\r\n          ></SessionDash>{\" \"}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            dashIsFullScreen\r\n              ? styles.fullScreenFishingDash\r\n              : styles.fishingDashboard\r\n          }\r\n        >\r\n          <LakeAccordion\r\n            className={styles.lakeAccordion}\r\n            lakes={props.lakes}\r\n            selectLake={selectLake}\r\n            currentIndex={lakeSelected}\r\n          ></LakeAccordion>\r\n          <LakeStats\r\n            className={styles.lakeStats}\r\n            isFullScreen={dashIsFullScreen}\r\n            lakes={props.lakes}\r\n            lakeIndex={lakeSelected}\r\n            fishLake={fishLake}\r\n          ></LakeStats>\r\n        </div>\r\n      )}\r\n      {dashIsFullScreen && !isFishing ? (\r\n        <div className={styles.extraStats}>\r\n          <ExtraLakeStats\r\n            lakeIndex={lakeSelected}\r\n            fishLake={fishLake}\r\n          ></ExtraLakeStats>\r\n        </div>\r\n      ) : null}\r\n      <div\r\n        className={styles.dashboardExtender}\r\n        onClick={() => setDashIsFullScreen(!dashIsFullScreen)}\r\n      ></div>\r\n      {!dashIsFullScreen ? (\r\n        <div className={styles.optionButtons}>\r\n          <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonInfoContainer}>\r\n              <div className={styles.buttonInfoHeader}>Manage variables</div>\r\n              <div className={styles.buttonInfo}>\r\n                look up, edit and create new lakes/baits..\r\n              </div>\r\n            </div>\r\n            <Link to=\"/fishv3/manage\">\r\n              <Button className={styles.button}> </Button>\r\n            </Link>\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonInfoContainer}>\r\n              <div className={styles.buttonInfoHeader}>Stats</div>\r\n              <div className={styles.buttonInfo}>\r\n                use stats to find the best variables for your session\r\n              </div>\r\n            </div>\r\n            <Link to=\"/fishv3/stats\">\r\n              <Button className={styles.button}> </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from \"react\";\r\nimport styles from \"./variableManager.module.css\";\r\n\r\nfunction VariableManager(props) {\r\n  return <div>manager</div>;\r\n}\r\n\r\nexport default VariableManager;\r\n","import React from \"react\";\r\nimport styles from \"./variableManagement.module.css\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport VariableManager from \"./VariableManager\";\r\n\r\nfunction VariableManagement(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.managementInfo}>\r\n        <div className={styles.infoHeader}>Variable Management</div>\r\n        <div className={styles.infoBody}>\r\n          you keep the casts when deleting variables\r\n        </div>\r\n      </div>\r\n      <ButtonGroup className={styles.variableSelectors}>\r\n        <Button>Lakes</Button>\r\n        <Button>Baits</Button>\r\n        <Button>Styles</Button>\r\n        <Button>Species</Button>\r\n      </ButtonGroup>\r\n      <VariableManager></VariableManager>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariableManagement;\r\n","import React from \"react\";\r\nimport styles from \"./stats.module.css\";\r\n\r\nfunction Stats(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>{\"Stats & Tools\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","function DevData(castsWanted) {\r\n  console.log(\"hello world\");\r\n  let devData = {};\r\n  let lakes = [\r\n    { name: \"Holton\", lakes: [{ name: \"Holton\", castIndexes: [] }] },\r\n    { name: \"Alderby\", lakes: [{ name: \"Alderby\", castIndexes: [] }] },\r\n    { name: \"Henstead\", lakes: [{ name: \"Henstead\", castIndexes: [] }] },\r\n    { name: \"Wisset\", lakes: [{ name: \"Wisset\", castIndexes: [] }] },\r\n  ];\r\n  let species = [\r\n    { name: \"Carp\", castIndexes: [] },\r\n    { name: \"Roach\", castIndexes: [] },\r\n    { name: \"Pike\", castIndexes: [] },\r\n    { name: \"Perch\", castIndexes: [] },\r\n  ];\r\n  let baits = [\r\n    { name: \"Sweetcorn\", castIndexes: [] },\r\n    { name: \"Maggots\", castIndexes: [] },\r\n    { name: \"Bread\", castIndexes: [] },\r\n    { name: \"Lure\", castIndexes: [] },\r\n  ];\r\n  let styles = [\r\n    {\r\n      name: \"Float\",\r\n      castIndexes: [],\r\n    },\r\n    {\r\n      name: \"Ledger\",\r\n      castIndexes: [],\r\n    },\r\n    {\r\n      name: \"Spin\",\r\n      castIndexes: [],\r\n    },\r\n    {\r\n      name: \"Feeder\",\r\n      castIndexes: [],\r\n    },\r\n  ];\r\n  let devCasts = [];\r\n\r\n  let getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  };\r\n\r\n  for (let i = 0; i < castsWanted; i++) {\r\n    let castLake = getRandomInt(lakes.length);\r\n    let castBait = getRandomInt(baits.length);\r\n    let castStyle = getRandomInt(styles.length);\r\n    let castSpecies = getRandomInt(species.length);\r\n    devCasts.push({\r\n      lake: castLake,\r\n      bait: castBait,\r\n      style: castStyle,\r\n      species: castSpecies,\r\n    });\r\n\r\n    lakes[castLake].lakes[0].castIndexes.push(i);\r\n    baits[castBait].castIndexes.push(i);\r\n    styles[castStyle].castIndexes.push(i);\r\n    species[castSpecies].castIndexes.push(i);\r\n  }\r\n  devData.castHistory = devCasts;\r\n  devData.lakes = lakes;\r\n  devData.baits = baits;\r\n  devData.styles = styles;\r\n  devData.species = species;\r\n\r\n  return devData;\r\n}\r\n\r\nexport default DevData;\r\n","import React from \"react\";\nimport styles from \"./app.module.css\";\nimport Nav from \"./nav/Nav\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MainMenu from \"./mainMenu/MainMenu\";\nimport VariableManagement from \"./variableManagement/VaraibleManagement\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Stats from \"./stats/Stats\";\nimport DevData from \"./DevData\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [],\n      baits: [],\n      styles: [],\n      species: [],\n      castHistory: [],\n    };\n  }\n  componentDidMount() {\n    let devState = DevData(100);\n    this.setState({\n      lakes: devState.lakes,\n      baits: devState.baits,\n      styles: devState.styles,\n      species: devState.species,\n      castHistory: devState.castHistory,\n    });\n  }\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <Router>\n          <Nav></Nav>\n          <Switch>\n            <Route\n              path=\"/fishv3/\"\n              exact\n              render={(props) => <MainMenu lakes={this.state.lakes}></MainMenu>}\n            ></Route>\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/fishv3/manage\"\n              render={(props) => <VariableManagement></VariableManagement>}\n            ></Route>\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/fishv3/stats\"\n              render={(props) => <Stats></Stats>}\n            ></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakeStats_container__3WcWD\",\"button\":\"lakeStats_button__D8avZ\",\"lakeInfoContainer\":\"lakeStats_lakeInfoContainer__Gvd9x\",\"infoHeader\":\"lakeStats_infoHeader__3obKq\",\"infoBody\":\"lakeStats_infoBody__kMOQ9\",\"timeData\":\"lakeStats_timeData__31wxm\",\"buttonContainer\":\"lakeStats_buttonContainer__Yv6mk\",\"buttonContainerFullScreen\":\"lakeStats_buttonContainerFullScreen__1wBHJ\"};"],"sourceRoot":""}